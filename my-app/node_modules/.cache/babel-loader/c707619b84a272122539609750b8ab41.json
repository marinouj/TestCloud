{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Downloads\\\\hhhhh\\\\Test\\\\my-app\\\\src\\\\REGISTER\\\\ManageRegister.jsx\";\nimport React from \"react\";\nimport RegisterForm from \"./RegisterForm\";\nimport * as userActions from \"../../actions/UserActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ManageRegister extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      user: {\n        id: \"\",\n        name: \"\",\n        surname: \"\",\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        role: \"\"\n      }\n    };\n\n    this.updateInfo = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      const user = { ...this.state.user,\n        [name]: value\n      };\n      this.setState({\n        user\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      userActions.loadUsers().then(newData => {\n        const uid = Math.max(...newData.map(a => a.UserId)) + 1;\n        this.state.user.id = uid;\n        console.log(this.state.user);\n        userActions.createUser(this.state.user).then(res => {\n          console.log(res);\n          window.location.assign(\"../\");\n        }).catch(error => {\n          alert(\"Register failed: \" + error);\n        });\n      }).catch(error => {\n        alert(\"Register failed: \" + error);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(RegisterForm, {\n      user: this.state.user,\n      onSubmit: this.handleSubmit,\n      onChange: this.updateInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ManageRegister;","map":{"version":3,"sources":["C:/Users/marin/Downloads/hhhhh/Test/my-app/src/REGISTER/ManageRegister.jsx"],"names":["React","RegisterForm","userActions","ManageRegister","Component","state","user","id","name","surname","username","password","email","role","updateInfo","event","value","target","setState","handleSubmit","preventDefault","loadUsers","then","newData","uid","Math","max","map","a","UserId","console","log","createUser","res","window","location","assign","catch","error","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAE,EADA;AAEJC,QAAAA,IAAI,EAAE,EAFF;AAGJC,QAAAA,OAAO,EAAE,EAHL;AAIJC,QAAAA,QAAQ,EAAE,EAJN;AAKJC,QAAAA,QAAQ,EAAE,EALN;AAMJC,QAAAA,KAAK,EAAE,EANH;AAOJC,QAAAA,IAAI,EAAE;AAPF;AADA,KADmC;;AAAA,SAa3CC,UAb2C,GAa7BC,KAAD,IAAW;AACtB,YAAM;AAAEP,QAAAA,IAAF;AAAQQ,QAAAA;AAAR,UAAkBD,KAAK,CAACE,MAA9B;AACA,YAAMX,IAAI,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC,IAAhB;AAAsB,SAACE,IAAD,GAAQQ;AAA9B,OAAb;AACA,WAAKE,QAAL,CAAc;AAAEZ,QAAAA;AAAF,OAAd;AACD,KAjB0C;;AAAA,SAmB3Ca,YAnB2C,GAmB5B,MAAOJ,KAAP,IAAiB;AAC9BA,MAAAA,KAAK,CAACK,cAAN;AACAlB,MAAAA,WAAW,CACRmB,SADH,GAEGC,IAFH,CAESC,OAAD,IAAa;AACjB,cAAMC,GAAG,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGH,OAAO,CAACI,GAAR,CAAaC,CAAD,IAAOA,CAAC,CAACC,MAArB,CAAZ,IAA4C,CAAxD;AACA,aAAKxB,KAAL,CAAWC,IAAX,CAAgBC,EAAhB,GAAqBiB,GAArB;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWC,IAAvB;AACAJ,QAAAA,WAAW,CACR8B,UADH,CACc,KAAK3B,KAAL,CAAWC,IADzB,EAEGgB,IAFH,CAESW,GAAD,IAAS;AACbH,UAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD,SALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChBC,UAAAA,KAAK,CAAC,sBAAsBD,KAAvB,CAAL;AACD,SARH;AASD,OAfH,EAgBGD,KAhBH,CAgBUC,KAAD,IAAW;AAChBC,QAAAA,KAAK,CAAC,sBAAsBD,KAAvB,CAAL;AACD,OAlBH;AAmBD,KAxC0C;AAAA;;AA0C3CE,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,YAAD;AACE,MAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWC,IADnB;AAEE,MAAA,QAAQ,EAAE,KAAKa,YAFjB;AAGE,MAAA,QAAQ,EAAE,KAAKL;AAHjB;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAlD0C;;AAqD7C,eAAeX,cAAf","sourcesContent":["import React from \"react\";\r\nimport RegisterForm from \"./RegisterForm\";\r\nimport * as userActions from \"../../actions/UserActions\";\r\n\r\nclass ManageRegister extends React.Component {\r\n  state = {\r\n    user: {\r\n      id: \"\",\r\n      name: \"\",\r\n      surname: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n    },\r\n  };\r\n\r\n  updateInfo = (event) => {\r\n    const { name, value } = event.target;\r\n    const user = { ...this.state.user, [name]: value };\r\n    this.setState({ user });\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    userActions\r\n      .loadUsers()\r\n      .then((newData) => {\r\n        const uid = Math.max(...newData.map((a) => a.UserId)) + 1;\r\n        this.state.user.id = uid;\r\n        console.log(this.state.user);\r\n        userActions\r\n          .createUser(this.state.user)\r\n          .then((res) => {\r\n            console.log(res);\r\n            window.location.assign(\"../\");\r\n          })\r\n          .catch((error) => {\r\n            alert(\"Register failed: \" + error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Register failed: \" + error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <RegisterForm\r\n        user={this.state.user}\r\n        onSubmit={this.handleSubmit}\r\n        onChange={this.updateInfo}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageRegister;\r\n"]},"metadata":{},"sourceType":"module"}